{
	"info": {
		"_postman_id": "4e99810b-bebd-4864-81ac-c3270dac002b",
		"name": "Zain Academy",
		"description": "# Authentication\nYou need to be authenticated first to use all the api, for start you use GET request \n\n# Error Codes\n`404\n{\n'success':False \n'error':404 \n'message':'resource not found' }`\n\n`422\n{\n'success':False \n'error':422 \n'message':'unprocessable' }`\n\n`400\n{\n'success':False \n'error':400 \n'message':'bad request' }`\n\n`500\n{\n'success':False \n'error':500 \n'message':'internal server error' }`\n\n`405\n{\n'success':False \n'error':405 \n'message':'Methods not allowed' }`\n\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "Instructor",
					"item": [
						{
							"name": "/instructors",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains drinks array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.drinks).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/instructors",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructors"
									]
								}
							},
							"response": []
						},
						{
							"name": "/instructor",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"jaber ali\",\n    \"phone\":\"123123\",\n    \"email\":\"qwe@gmail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/instructor",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructor"
									]
								}
							},
							"response": []
						},
						{
							"name": "/instructor/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"mohamd.aljoufihotmail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/instructor/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructor",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/instructor/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/instructor/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructor",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "course",
					"item": [
						{
							"name": "courses",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains drinks array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.drinks).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/courses",
									"host": [
										"{{host}}"
									],
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "course",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"OOP\",\n    \"type\":\"programming\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course",
									"host": [
										"{{host}}"
									],
									"path": [
										"course"
									]
								}
							},
							"response": []
						},
						{
							"name": "/course/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\":\"progrmming\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/course/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/course/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "classes",
					"item": [
						{
							"name": "classes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains drinks array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.drinks).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/class",
									"host": [
										"{{host}}"
									],
									"path": [
										"class"
									]
								}
							},
							"response": []
						},
						{
							"name": "class",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"course_id\": 5,\n    \"end_time\": \"01-01-2021\",\n    \"instructor_id\": 10,\n    \"start_time\": \"01-02-2021\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/class",
									"host": [
										"{{host}}"
									],
									"path": [
										"class"
									]
								}
							},
							"response": []
						},
						{
							"name": "/class/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/class/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"class",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "instructor role",
			"item": [
				{
					"name": "Instructor",
					"item": [
						{
							"name": "/instructors",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains drinks array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.drinks).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/instructors",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructors"
									]
								}
							},
							"response": []
						},
						{
							"name": "/instructor",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"jaber ali\",\n    \"phone\":\"123123\",\n    \"email\":\"qwe@gmail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/instructor",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructor"
									]
								}
							},
							"response": []
						},
						{
							"name": "/instructor/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"mohamd.aljoufihotmail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/instructor/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructor",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/instructor/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/instructor/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructor",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "course",
					"item": [
						{
							"name": "courses",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains drinks array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.drinks).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/courses",
									"host": [
										"{{host}}"
									],
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "course",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"OOP\",\n    \"type\":\"programming\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course",
									"host": [
										"{{host}}"
									],
									"path": [
										"course"
									]
								}
							},
							"response": []
						},
						{
							"name": "/course/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\":\"progrmming\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/course/1 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/course/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "classes",
					"item": [
						{
							"name": "classes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains drinks array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.drinks).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/class",
									"host": [
										"{{host}}"
									],
									"path": [
										"class"
									]
								}
							},
							"response": []
						},
						{
							"name": "class",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"course_id\": 1,\n    \"end_time\": \"01-01-2021\",\n    \"instructor_id\": 3,\n    \"start_time\": \"01-02-2021\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/class",
									"host": [
										"{{host}}"
									],
									"path": [
										"class"
									]
								}
							},
							"response": []
						},
						{
							"name": "/class/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/class/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"class",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZWbXBuS0NjRnRoYkJlQ1l4ZGJDNSJ9.eyJpc3MiOiJodHRwczovL2NvZmZlaG9wLmV1LmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2MGZlNTNiM2RhMDBjOTAwNjgyZGI4YTciLCJhdWQiOiJ6YWNhZGVteSIsImlhdCI6MTYyOTg5MjMyMywiZXhwIjoxNjI5ODk5NTIzLCJhenAiOiJsRWNkRGxwR3pwOG9ocHQ3SktjRTh2RVpSYWp2VWxyaSIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsicG9zdDpjb3Vyc2UiLCJwb3N0Omluc3RydWN0b3JfY291cnNlIl19.WChLjpDDnogBO5Rtbre5yclcyZhDSM8eQrAsE9AP_4uQRZae0RD5zfMS2vjNCxZhUKE1jbWaQbn_GZsIjMOWfK44g8lPS9yvSm3EdaJfiSVhvBWVsHpBETcHiztYMGNlkTa9-0-FQMAuP2c1IghDgBKcS3mGdET3rvrT6k2EO2AfS_iRSG-U6aSXO7HQApcpQFaTMuNCOvmOa0EQuQzt1CBTF_vnfGm4ncKL6QnolviOJrc_JThNMWOo5CCmtgUrabfHM-V0TzmsvZB8Bh-w5lAIFfZfNbJ3dFcMztldEYOT9J7flO96bDIx5wcmYkSS7f7bnl6K35JkFIcfHy3AuQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "admin",
			"item": [
				{
					"name": "Instructor",
					"item": [
						{
							"name": "/instructors",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains drinks array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.drinks).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/instructors",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructors"
									]
								}
							},
							"response": []
						},
						{
							"name": "/instructor",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"jaber ali\",\n    \"phone\":\"123123\",\n    \"email\":\"qwe@gmail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/instructor",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructor"
									]
								}
							},
							"response": []
						},
						{
							"name": "/instructor/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"mohamd.aljoufihotmail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/instructor/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructor",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/instructor/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/instructor/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"instructor",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "course",
					"item": [
						{
							"name": "courses",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains drinks array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.drinks).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/courses",
									"host": [
										"{{host}}"
									],
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "course",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"OOP\",\n    \"type\":\"programming\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course",
									"host": [
										"{{host}}"
									],
									"path": [
										"course"
									]
								}
							},
							"response": []
						},
						{
							"name": "/course/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\":\"progrmming\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/course/1 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/course/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "classes",
					"item": [
						{
							"name": "classes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains drinks array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.drinks).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/class",
									"host": [
										"{{host}}"
									],
									"path": [
										"class"
									]
								}
							},
							"response": []
						},
						{
							"name": "class",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"course_id\": 1,\n    \"end_time\": \"01-01-2021\",\n    \"instructor_id\": 1,\n    \"start_time\": \"01-02-2021\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/class",
									"host": [
										"{{host}}"
									],
									"path": [
										"class"
									]
								}
							},
							"response": []
						},
						{
							"name": "/class/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401 since no credentials are present\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/class/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"class",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZWbXBuS0NjRnRoYkJlQ1l4ZGJDNSJ9.eyJpc3MiOiJodHRwczovL2NvZmZlaG9wLmV1LmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2MGU2OWY2YTNkZjlkMzAwNjhiMmM5NzkiLCJhdWQiOiJ6YWNhZGVteSIsImlhdCI6MTYyOTg5MjI3MiwiZXhwIjoxNjI5ODk5NDcyLCJhenAiOiJsRWNkRGxwR3pwOG9ocHQ3SktjRTh2RVpSYWp2VWxyaSIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmNvdXJzZSIsImRlbGV0ZTppbnN0cnVjdG9yIiwiZGVsZXRlOmluc3RydWN0b3JfY291cnNlIiwiZ2V0OmNvdXJzZSIsImdldDppbnN0cnVjdG9yIiwiZ2V0Omluc3RydWN0b3JfY291cnNlIiwicGF0Y2g6Y291cnNlIiwicGF0Y2g6aW5zdHJ1Y3RvciIsInBvc3Q6Y291cnNlIiwicG9zdDppbnN0cnVjdG9yIiwicG9zdDppbnN0cnVjdG9yX2NvdXJzZSJdfQ.jS3gA7uXjncj4pJMH_jz1eh8OMh-d78NEEXWuv5e8Qjj0zXRe32bptKFkXUb3aWe7-kuA-lBjGkXqXwutKe8VPf3-89SV76luH9caXk-lH7jZtnsazF4nkKsRMrRsyfO1vHxzzVn7TF4IsRL2JSDOCjJsM9Gka1AB_xeMqJp6Q9jC8Ttotdm3JboG69_vtIdpljjTMvaQWV0KDF9euOwBOeXk1an4dOUndiMg8kr3U92VZECq8eKLnCbYfTZtnDCH2s-AXDGwooeI9jeCDr1BkZQpEcu78yCzlXdr89AKKDrrOECP4ao2N6wOHZIs7KiCAq2_PsND6JWons8svUObg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://zain-academy-dep.herokuapp.com/"
		},
		{
			"key": "server-host",
			"value": "https://zain-academy-dep.herokuapp.com/"
		}
	]
}